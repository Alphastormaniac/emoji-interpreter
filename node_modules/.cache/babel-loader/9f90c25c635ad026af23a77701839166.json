{"ast":null,"code":"import _slicedToArray from \"C:/Users/91866/OneDrive/Documents/GitHub/emoji-interpreter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\91866\\\\OneDrive\\\\Documents\\\\GitHub\\\\emoji-interpreter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar emojiDictionary = {\n  \"üçá\": \"Grapes\",\n  \"üçà\": \"Melon\",\n  \"üçâ\": \"Watermelon\",\n  \"üçä\": \"Tangerine\",\n  \"üçã\": \"Lemon\",\n  \"üçå\": \"Banana\",\n  \"üçç\": \"Pineapple\",\n  \"ü•≠\": \"Mango\",\n  \"üçé\": \"Red Apple\",\n  \"üçè\": \"Green Apple\",\n  \"üçê\": \"Pear\",\n  \"üçë\": \"Peach\",\n  \"üçí\": \"Cherries\",\n  \"üçì\": \"Strawberry\",\n  \"ü´ê\": \"Blueberries\",\n  \"ü•ù\": \"Kiwi Fruit\",\n  \"üçÖ\": \"Tomato\",\n  \"ü´í\": \"Olive\"\n};\nvar emojis = Object.keys(emojiDictionary); // returns an array of all the keys of the object\n\nexport default function App() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      emoji = _useState2[0],\n      setEmoji = _useState2[1];\n\n  var _useState3 = useState(\"translation will show here....\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      meaning = _useState4[0],\n      setMeaning = _useState4[1];\n\n  function emojiEventHandler(e) {\n    var userInput = e.target.value;\n    setEmoji(userInput);\n\n    if (userInput in emojiDictionary) {\n      setMeaning(emojiDictionary[userInput]);\n    } else {\n      setMeaning(\"failure to recognise this emoji\");\n    }\n  }\n\n  function emojiClickHandler(inputEmoji) {\n    setMeaning(emojiDictionary[inputEmoji]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inside outt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: emoji,\n      placeholder: \"type in fruit emojis\",\n      onChange: emojiEventHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: emoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: meaning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), emojis.map(function (emoji) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: function onClick() {\n          return emojiClickHandler(emoji);\n        },\n        style: {\n          fontSize: \"2rem\",\n          padding: \"0.5rem\",\n          cursor: \"pointer\"\n        },\n        children: [\" \", emoji, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HWIV9Qj4tRPycQj0bivGZuamPrI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/91866/OneDrive/Documents/GitHub/emoji-interpreter/src/App.js"],"names":["React","useState","emojiDictionary","emojis","Object","keys","App","emoji","setEmoji","meaning","setMeaning","emojiEventHandler","e","userInput","target","value","emojiClickHandler","inputEmoji","map","fontSize","padding","cursor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;;AAEA,IAAMC,eAAe,GAAG;AACtB,QAAM,QADgB;AAEtB,QAAM,OAFgB;AAGtB,QAAM,YAHgB;AAItB,QAAM,WAJgB;AAKtB,QAAM,OALgB;AAMtB,QAAM,QANgB;AAOtB,QAAM,WAPgB;AAQtB,QAAM,OARgB;AAStB,QAAM,WATgB;AAUtB,QAAM,aAVgB;AAWtB,QAAM,MAXgB;AAYtB,QAAM,OAZgB;AAatB,QAAM,UAbgB;AActB,QAAM,YAdgB;AAetB,QAAM,aAfgB;AAgBtB,QAAM,YAhBgB;AAiBtB,QAAM,QAjBgB;AAkBtB,QAAM;AAlBgB,CAAxB;AAqBA,IAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYH,eAAZ,CAAf,C,CAA6C;;AAE7C,eAAe,SAASI,GAAT,GAAe;AAAA;;AAAA;;AAC5B,kBAA0BL,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AAEA,mBAA8BP,QAAQ,CAAC,gCAAD,CAAtC;AAAA;AAAA,MAAOQ,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,WAASC,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5B,QAAMC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA3B;AAEAP,IAAAA,QAAQ,CAACK,SAAD,CAAR;;AAEA,QAAIA,SAAS,IAAIX,eAAjB,EAAkC;AAChCQ,MAAAA,UAAU,CAACR,eAAe,CAACW,SAAD,CAAhB,CAAV;AACD,KAFD,MAEO;AACLH,MAAAA,UAAU,CAAC,iCAAD,CAAV;AACD;AACF;;AAED,WAASM,iBAAT,CAA2BC,UAA3B,EAAuC;AACrCP,IAAAA,UAAU,CAACR,eAAe,CAACe,UAAD,CAAhB,CAAV;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,KAAK,EAAEV,KADT;AAEE,MAAA,WAAW,EAAC,sBAFd;AAGE,MAAA,QAAQ,EAAEI;AAHZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA,gBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YARF,EASGN,MAAM,CAACe,GAAP,CAAW,UAACX,KAAD;AAAA,0BACV;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMS,iBAAiB,CAACT,KAAD,CAAvB;AAAA,SADX;AAEE,QAAA,KAAK,EAAE;AAAEY,UAAAA,QAAQ,EAAE,MAAZ;AAAoBC,UAAAA,OAAO,EAAE,QAA7B;AAAuCC,UAAAA,MAAM,EAAE;AAA/C,SAFT;AAAA,mBAIG,GAJH,EAKGd,KALH,EAKU,GALV;AAAA;AAAA;AAAA;AAAA;AAAA,eADU;AAAA,KAAX,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1CuBD,G;;KAAAA,G","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst emojiDictionary = {\r\n  \"üçá\": \"Grapes\",\r\n  \"üçà\": \"Melon\",\r\n  \"üçâ\": \"Watermelon\",\r\n  \"üçä\": \"Tangerine\",\r\n  \"üçã\": \"Lemon\",\r\n  \"üçå\": \"Banana\",\r\n  \"üçç\": \"Pineapple\",\r\n  \"ü•≠\": \"Mango\",\r\n  \"üçé\": \"Red Apple\",\r\n  \"üçè\": \"Green Apple\",\r\n  \"üçê\": \"Pear\",\r\n  \"üçë\": \"Peach\",\r\n  \"üçí\": \"Cherries\",\r\n  \"üçì\": \"Strawberry\",\r\n  \"ü´ê\": \"Blueberries\",\r\n  \"ü•ù\": \"Kiwi Fruit\",\r\n  \"üçÖ\": \"Tomato\",\r\n  \"ü´í\": \"Olive\"\r\n};\r\n\r\nconst emojis = Object.keys(emojiDictionary); // returns an array of all the keys of the object\r\n\r\nexport default function App() {\r\n  const [emoji, setEmoji] = useState(\"\");\r\n\r\n  const [meaning, setMeaning] = useState(\"translation will show here....\");\r\n\r\n  function emojiEventHandler(e) {\r\n    const userInput = e.target.value;\r\n\r\n    setEmoji(userInput);\r\n\r\n    if (userInput in emojiDictionary) {\r\n      setMeaning(emojiDictionary[userInput]);\r\n    } else {\r\n      setMeaning(\"failure to recognise this emoji\");\r\n    }\r\n  }\r\n\r\n  function emojiClickHandler(inputEmoji) {\r\n    setMeaning(emojiDictionary[inputEmoji]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Inside outt</h1>\r\n      <input\r\n        value={emoji}\r\n        placeholder=\"type in fruit emojis\"\r\n        onChange={emojiEventHandler}\r\n      ></input>\r\n      <h2>{emoji}</h2>\r\n      <h3>{meaning}</h3>\r\n      {emojis.map((emoji) => (\r\n        <span\r\n          onClick={() => emojiClickHandler(emoji)}\r\n          style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\r\n        >\r\n          {\" \"}\r\n          {emoji}{\" \"}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}